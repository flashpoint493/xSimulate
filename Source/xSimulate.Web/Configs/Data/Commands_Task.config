<?xml version="1.0" encoding="utf-8" ?>
<dataOperations xmlns="NetFramework.DataAccess">

  <dataCommand name="Task_CreateTask" dataSource="MainDB" type="Text">
    <commandText>
      <![CDATA[
        IF EXISTS(SELECT  TOP  1 1
        FROM dbo.Customer c WITH(NOLOCk)
        INNER JOIN dbo.Account a WITH(NOLOCK) ON c.SysNO = a.SysNO
        WHERE c.SysNO = @CustomerSysNo AND c.[Status] = 'A' AND a.Amount >= @Costs)
        BEGIN
        
          UPDATE dbo.Account
          SET Amount = Amount - @Costs
          where SysNo = @CustomerSysNo
	
	        INSERT INTO [dbo].[Task]
                   ([CustomerSysNO]
                   ,[CustomerSettingSysNo]
                   ,[RunTimes]
                   ,[DownTimes]
                   ,[BeginDate]
                   ,[EndDate]
                   ,[Costs]
                   ,[Status]
                   ,[InDate]
                   )
             VALUES
                   (@CustomerSysNo
                   ,@CustomerSettingSysNo
                   ,@RunTimes
                   ,0
                   ,@BeginDate
                   ,@EndDate
                   ,@Costs
                   ,'A'
                   ,GETDATE()
                   )
                   
            SET @Result = 1
	
        END
        ELSE
        BEGIN
	        SET @Result = -1
        END

      ]]>
    </commandText>
    <parameters>
      <param name="@CustomerSysNo" type="Int"/>
      <param name="@CustomerSettingSysNo" type="Int"/>
      <param name="@RunTimes" type="Int"/>
      <param name="@BeginDate" type="DateTime"/>
      <param name="@EndDate" type="DateTime"/>
      <param name="@Costs" type="Decimal" precision="16" scale="9"/>
      <param name="@Result" type="Int" direction="Output" />
    </parameters>
  </dataCommand>

  <dataCommand name="Task_RetrieveTask" dataSource="MainDB" type="Text">
    <commandText>
      <![CDATA[
      DECLARE @TaskSysNo INT
      DECLARE @RetrieveTaskSysNo INT
      DECLARE @Setting XML
      
      SET @CustomerSysNo= 1
      
      SELECT TOP 1 
	      @TaskSysNo = t.SysNo, @RetrieveTaskSysNo = r.SysNo, @Setting = s.Setting
      FROM dbo.RetrieveTask r WITH(NOLOCK) INNER JOIN dbo.Task t WITH(NOLOCK)
      ON r.RunTaskSysNo = t.SysNo
      INNER JOIN dbo.CustomerSetting s WITH(NOLOCK) ON t.CustomerSettingSysNo = s.SysNo
      WHERE r.[RetrieveCustomerSysNo] = @CustomerSysNo AND r.[Status] = 'A' AND t.[Status] = 'A' AND t.DownTimes < t.RunTimes
      
      IF @TaskSysNo IS NOT NULL
      BEGIN
        SELECT  @TaskSysNo AS 'RunTaskSysNo', @RetrieveTaskSysNo AS 'SysNo', @Setting AS 'Task_Setting'
        RETURN;
      END

	  DECLARE @TaskCustomerSysNo INT
    
      SELECT  TOP  1
      @TaskSysNo = t.SysNo
      ,@TaskCustomerSysNo = t.CustomerSysNO
      ,@Setting = s.Setting
      FROM   dbo.Task t WITH(NOLOCk)
      INNER JOIN dbo.CustomerSetting s WITH(NOLOCK) ON t.CustomerSettingSysNo = s.SysNo 
      INNER JOIN dbo.Customer c WITH(NOLOCK) ON s.CustomerSysNo = c.SysNO
      WHERE t.Status = 'A' AND c.Status = 'A' AND t.BeginDate <= GETDATE() AND (t.EndDate < GETDATE() OR t.EndDate IS NULL)
      AND t.Runtimes > 
      (
	      SELECT COUNT(1) FROM dbo.RetrieveTask r WITH(NOLOCK)
	      WHERE r.RunTaskSysNo = t.SysNo AND r.Status = 'A'
      ) 
      
      SELECT @TaskSysNo

      IF @TaskSysNo IS NOT NULL
      BEGIN
			INSERT INTO [WRM].[dbo].[RetrieveTask]
				   ([CustomerSysNo]
				   ,[RetrieveCustomerSysNo]
				   ,[RunTaskSysNo]
				   ,[Status]
				   ,[InDate]
				   ,[EditDate]
				   )
			 VALUES
				   (@TaskCustomerSysNo
				   ,@CustomerSysNo
				   ,@TaskSysNo
				   ,'A'
				   ,GETDATE()
				   ,GETDATE()
				   )

           SELECT @RetrieveTaskSysNo =  @@IDENTITY
           SELECT  @TaskSysNo AS 'RunTaskSysNo', @RetrieveTaskSysNo AS 'SysNo',  @Setting AS 'Task_Setting'
      END
      ]]>
    </commandText>
    <parameters>
      <param name="@CustomerSysNo" type="Int"/>
    </parameters>
  </dataCommand>
 
  <dataCommand name="Task_UpdateRetrieveTaskStatus" dataSource="MainDB" type="Text">
    <commandText>
      <![CDATA[
      UPDATE TOP (1) dbo.RetrieveTask
      SET [Status] = @Status
      ,[Description] = @Description
      ,EditDate = GETDATE()
      WHERE SysNo = @RetrieveTask
      
      UPDATE TOP (1) dbo.Task
      SET DownTimes = DownTimes + 1
      WHERE SysNo = @TaskSysNo
      ]]>
    </commandText>
    <parameters>
      <param name="@TaskSysNo" type="Int"/>
      <param name="@RetrieveTask" type="Int"/>
      <param name="@Status" type="Char" size="1"/>
      <param name="@Description" type="NVarChar" size="500"/>
    </parameters>
  </dataCommand>
</dataOperations>